name: Deploy to ArgoCD

# 워크플로우 트리거 조건 정의
on:
  # main 브랜치로의 push 이벤트 시 실행
  push:
    branches: [ main ]
  # main 브랜치로의 Pull Request 이벤트 시 실행
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE_NAME: duk9741/ddoongs-gateway
  # GitOps 리포지토리 정보
  GITOPS_REPO: dukcode/macmini-gitops
  # GitOps 배포 설정 파일 경로
  GITOPS_PATH: ddoongs/gateway

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    outputs:
      docker-tag: ${{ steps.meta.outputs.tags }}
      docker-version: ${{ steps.meta.outputs.version }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'liberica'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle
        run: ./gradlew bootJar
      
      # Docker Buildx 설정 (멀티 플랫폼 빌드 지원)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            # 브랜치 이름을 태그로 사용
            type=ref,event=branch
            # 브랜치명-커밋SHA 형식의 태그
            type=sha,prefix={{branch}}-
            # main 브랜치일 경우 latest 태그 추가
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-argocd-manifests:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout ArgoCD manifests
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GITOPS_REPO }}
          token: ${{ secrets.GITOPS_TOKEN }}
          path: gitops

      - name: Update image tag in manifests
        run: |
          cd gitops
          # 새로운 이미지 태그 생성 (브랜치명-짧은커밋SHA)
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          IMAGE_TAG="${{ github.ref_name }}-${SHORT_SHA}"
          # sed를 사용하여 이미지 태그 교체
          sed -i "s|image: .*|image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${IMAGE_TAG}|g" ${{ env.GITOPS_PATH }}/gateway.yaml

      # 변경사항 커밋 및 푸시
      - name: Commit and push changes
        run: |
          cd gitops
          # Git 사용자 정보 설정
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          # 모든 변경사항 스테이징
          git add .
          # 커밋 메시지와 함께 커밋
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          git commit -m "Update image tag to ${{ github.ref_name }}-${SHORT_SHA}"
          # 원격 리포지토리로 푸시
          git push
